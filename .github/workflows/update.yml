# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Update

on:
  push:
    branches: [ "master" ]

  schedule:
    - cron: 0 0 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ROOT_DIR: ${{ github.workspace }}
      DATA_DIR: ${{ github.workspace }}/Data
      EXHENTAI_API_DUMP_DIR: ${{ github.workspace }}/exhentai

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'
        dotnet-quality: 'preview'

    - uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: pnpm install
      run: |
        cd "$ROOT_DIR/npanda-actions"
        pnpm install
        cd "$ROOT_DIR"

    - name: make dirs
      run: |
        mkdir "$DATA_DIR"
        mkdir "$DATA_DIR/Output"

    - name: download api dump
      run: |
        # download api dump
        wget https://github.com/npandaarchive/temp/releases/download/t/apidump.tzst -O apidump.tzst
        mkdir "$EXHENTAI_API_DUMP_DIR"
        /usr/bin/tar -xf apidump.tzst -P -C "$EXHENTAI_API_DUMP_DIR" --use-compress-program "unzstd --long=30"
        rm -rf apidump.tzst
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: restore data.tzst
      run: |
        # restore
        pnpx tsx ./npanda-actions/load.ts data.tzst
        /usr/bin/tar -xf data.tzst -P -C "$ROOT_DIR" --use-compress-program "unzstd --long=30"
        rm -rf data.tzst

    - name: run NHentaiScrapeV2
      run: |
        dotnet run --project ./NHentaiScrapeV2/NHentaiScrapeV2.csproj --configuration Release -- "$DATA_DIR"

    - name: run HentaiMapGen
      run: |
        dotnet run --project ./HentaiMapGen/HentaiMapGen.csproj --configuration Release -- "$EXHENTAI_API_DUMP_DIR/api_dump.sqlite" "$DATA_DIR"

    - name: run MassageForWeb
      run: |
        dotnet run --project ./MassageForWeb/MassageForWeb.csproj --configuration Release -- "$DATA_DIR" "$ROOT_DIR/npanda/static/data"

    - name: save data.tzst
      run: |
        # save
        /usr/bin/tar --posix -cf data.tzst --exclude data.tzst -P -C "$ROOT_DIR" "Data" --use-compress-program "zstdmt --long=30"
        pnpx tsx ./npanda-actions/save.ts data.tzst
        rm -rf data.tzst
      env:
        GITHUB_TOKEN: ${{ github.token }}
