# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Update

on:
  push:
    branches: [ "master" ]

  schedule:
    - cron: 0 0 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ROOT_DIR: ${{ github.workspace }}
      DATA_DIR: ${{ github.workspace }}/Data
      EXHENTAI_API_DUMP_DIR: ${{ github.workspace }}/exhentai

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'
        dotnet-quality: 'preview'

    - uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: pnpm install
      run: |
        cd "$ROOT_DIR/npanda-actions"
        pnpm install
        cd "$ROOT_DIR"

    - name: make dirs
      run: |
        mkdir "$DATA_DIR"
        mkdir "$DATA_DIR/Output"

    - name: download api dump
      run: |
        # download api dump
        wget https://github.com/npandaarchive/temp/releases/download/t/apidump.tzst -O apidump.tzst
        mkdir "$EXHENTAI_API_DUMP_DIR"
        /usr/bin/tar -xf apidump.tzst -P -C "$EXHENTAI_API_DUMP_DIR" --use-compress-program "unzstd --long=30"
        rm -rf apidump.tzst

    - name: restore data.tzst
      run: |
        # restore
        pnpx tsx ./npanda-actions/load.ts data.tzst
        /usr/bin/tar -xf data.tzst -P -C "$ROOT_DIR" --use-compress-program "unzstd --long=30"
        rm -rf data.tzst
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: run NHentaiScrapeV2
      run: |
        dotnet run --project ./NHentaiScrapeV2/NHentaiScrapeV2.csproj --configuration Release -- "$DATA_DIR"

    - name: run HentaiMapGen
      run: |
        dotnet run --project ./HentaiMapGen/HentaiMapGen.csproj --configuration Release -- "$EXHENTAI_API_DUMP_DIR/api_dump.sqlite" "$DATA_DIR"

    - name: run MassageForWeb
      run: |
        dotnet run --project ./MassageForWeb/MassageForWeb.csproj --configuration Release -- "$DATA_DIR" "$ROOT_DIR/npanda/static/data"

    - name: save data.tzst
      run: |
        # save
        /usr/bin/tar --posix -cf data.tzst --exclude data.tzst -P -C "$ROOT_DIR" "Data" --use-compress-program "zstdmt --long=30"
        pnpx tsx ./npanda-actions/save.ts data.tzst
        rm -rf data.tzst
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - id: add-and-commit
      uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: './npanda/static/data'

        # The name of the user that will be displayed as the author of the commit.
        # Default: depends on the default_author input
        author_name: update-bot

        # The email of the user that will be displayed as the author of the commit.
        # Default: depends on the default_author input
        author_email: bot@piss.invalid

        # Determines the way the action fills missing author name and email. Three options are available:
        # - github_actor -> UserName <UserName@users.noreply.github.com>
        # - user_info -> Your Display Name <your-actual@email.com>
        # - github_actions -> github-actions <email associated with the github logo>
        # Default: github_actor
        default_author: github_actor

        # Arguments for the git fetch command. If set to false, the action won't fetch the repo.
        # For more info as to why fetching is usually recommended, please see the "Performance on large repos" FAQ.
        # Default: --tags --force
        fetch: false

        # The message for the commit.
        # Default: 'Commit from GitHub Actions (name of the workflow)'
        message: 'Update galleries data [skip ci]'

        # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
        # - ignore -> errors will be logged but the step won't fail
        # - exitImmediately -> the action will stop right away, and the step will fail
        # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
        # Default: ignore
        pathspec_error_handling: ignore

        # Arguments for the git pull command. By default, the action does not pull.
        # Default: ''
        pull: '--rebase --auto-stash'

    - name: trigger svelte workflow
      if: ${{ steps.add-and-commit.outputs.committed == 'true' }}
      run: |
        pnpx tsx ./npanda-actions/dispatch-action.ts svelte.yml
      env:
        GITHUB_TOKEN: ${{ github.token }}
